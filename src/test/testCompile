#!/usr/bin/ruby
require 'find'
require 'shellwords'

@errFile = "errors.log"
@tmp = "tmp.log"

open(@errFile, 'w') { |f| f.print "" }

def runCompile(testPath, expectedExitCode)
  testFiles = []
  Find.find(testPath) {|path| testFiles << (Shellwords.shellescape path) if path =~ /.*\.wacc$/}
  numTests = testFiles.length
  i = 1
  hasErrored = 0
  isValid = expectedExitCode == 0;
  testFiles.each do |test|
    print "Running Test: #{i}/#{numTests}\r"
    testRun = `./compile #{test[/src.*/]} 2>#{@tmp}`

    tmp = File.open("#{@tmp}", "r")
    tmpContents = tmp.read
    output = "Running Test: #{File.basename test} \n"
    output += "Output: \n\t#{testRun} \n"

    actualExitCode = $?.exitstatus
    if (expectedExitCode != actualExitCode)
      if isValid && !(File.zero?("#{@tmp}") || tmpContents.strip.empty?)
        output += "Error(s): \n\t#{tmpContents}\n"
        output += "Finished Test."
      elsif !isValid && (File.zero?("#{@tmp}") || tmpContents.strip.empty?)
        output += "Error(s): \n\t No Errors!\n"
        output += "Finished Test."
      end
      hasErrored += 1
      output += "Wrong exit code: #{actualExitCode}, was expecting: #{expectedExitCode}"
      open(@errFile, 'a') { |f| f.puts output}
    end
    break if hasErrored > 10
    `rm #{@tmp}`
    i += 1
  end
  puts "\n\n"
end

def runCompileWithDir(folder)

  testFolder = "#{Dir.pwd}/src/test/resources/" + folder + "/"

  puts "Starting Valid Compile tests..."
  runCompile(testFolder+"valid", 0)
  puts "Finished tests."

  puts "Starting Syntax Errors Compile tests..."
  runCompile(testFolder+"invalid/syntaxErr", 100)
  puts "Finished tests."

  puts "Starting Semantic Errors Compile tests..."
  runCompile(testFolder+"invalid/semanticErr", 200)
  puts "Finished tests."

end

puts "Given tests:"
puts "\n"
runCompileWithDir("examples")
puts "Finished given tests"
puts "\n"

puts "Own tests:"
puts "\n"
runCompileWithDir("trialFiles")
puts "Finished own tests"
puts "\n"
