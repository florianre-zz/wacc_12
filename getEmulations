#!/usr/bin/ruby

require "rest-client"
require "json"
require 'find'
require 'shellwords'

@outputFolder = "src/test/output/expected"

@testFolder = "src/test/resources/examples/valid/"
@testFiles = []
Find.find(@testFolder) do |path|
  @testFiles << (Shellwords.shellescape path) if path =~ /.*\.wacc$/
end

def getAssembly(input)
  equals = "==========================================================="
  final = []
  assembly = input.split(equals)[1].split("\n").each { |line| final << line[/[0-9]+\t(.*)/, 1]}
  return final.join("\n")
end

def emulate()
  @testFiles.each do |file|
    # compile
    filename = File.basename(file, ".wacc")
    $theirAsm = ""
    $theirOutput = ""
    puts filename
    RestClient.post("https://teaching.doc.ic.ac.uk/wacc_compiler/run.cgi",
                      :stdin => "",
                      :options => ['-a'],
                      :testfile => File.new(file)
                     ) do |response|
      json = JSON.load(response)
      $theirAsm = getAssembly(json['compiler_out'])
    end

    File.open("#{@outputFolder}/asm/#{filename}.s", "w") {|f| f.write($theirAsm)}

    # emulate
    stdin = ""
    inputFiles = []
    Find.find(@testFolder) do |path|
      inputFiles << (Shellwords.shellescape path) if path =~ /.*#{filename}\.in$/
    end
    if !inputFiles.empty?
      stdin = File.open("#{inputFiles[0]}").read
    end
    RestClient.post("https://teaching.doc.ic.ac.uk/wacc_compiler/emulate.cgi",
                      :stdin => stdin,
                      :testfile => File.new("#{@outputFolder}/asm/#{filename}.s")
                     ) do |response|
      json = JSON.load(response)
      $theirOutput = json['emulator_out']
    end
    File.open("#{@outputFolder}/out/#{filename}.out", 'w') {|f| f.write($theirOutput) }
  end
end

puts "Getting Emulations"
# emulate()
puts "Finished Emulating."
